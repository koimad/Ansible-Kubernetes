---
# Values for Prometheus basic helm chart loacated at the following URL
# https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus
- name: Deploy the basic Prometheus and included compoonents required by the basic installation
  kubernetes.core.helm:
    name: prometheus
    binary_path: /usr/local/bin/helm
    chart_ref: helm-local/prometheus
    create_namespace: true
    release_namespace: '{{ monitoring_namespace }}'
    wait: true
    values: 
      configmapReload:
        prometheus: 
          enabled: true
          image:  
            repository: '{{ monitoring_container_repo }}/prometheus-operator/prometheus-config-reloader'
            tag: v0.65.1          
            pullPolicy: IfNotPresent

          extraConfigmapMounts:
            - name: certs-configmap
              mountPath: /etc/ssl/certs/my-company.pem
              subPath: my-company.pem # (optional)
              configMap: ca-bundle
              readOnly: true     

      server:
        name: server
        image:
          repository: '{{ monitoring_container_repo }}/bitnami/prometheus'
          # if not set appVersion field from Chart.yaml is used
          tag: '2.43.1'    
          pullPolicy: IfNotPresent    
        configPath: /etc/config/prometheus.yml
        ### The data directory used by prometheus to set --storage.tsdb.path
        ### When empty server.persistentVolume.mountPath is used instead
        storagePath: ""
        global:
          scrape_interval: 1m
          scrape_timeout: 10s
          evaluation_interval: 1m
        extraConfigmapMounts:
          - name: certs-configmap
            mountPath: /etc/ssl/certs/my-company.pem
            subPath: my-company.pem # (optional)
            configMap: ca-bundle
            readOnly: true  
        ingress:
          enabled: true  
          annotations: 
            kubernetes.io/ingress.class: nginx
          hosts:
            - '{{ monitoring_prometheus_host }}'
          tls:                   
            - secretName: prometheus-cert
              hosts:
                - '{{ monitoring_prometheus_host }}'
        strategy:
          type: Recreate  
        persistentVolume:
          enabled: true
          labels: {}
          annotations: 
            nfs.io/storage-path: 'prometheus' 
          accessModes:
            - ReadWriteMany
          existingClaim: ''
          mountPath: '/data'
          size: 5Gi  
          storageClass: 'nfs-client'
        securityContext:
          runAsUser: 0
          runAsNonRoot: false
          runAsGroup: 0
          fsGroup: 0
      
      alertmanager:
        enabled: false
        image: 
          repository: '{{ monitoring_container_repo }}/bitnami/alertmanager'
          tag: '0.25.0'

        persistence:
          enabled: true
          storageClass: 'nfs-client'
          annotations: 
            nfs.io/storage-path: 'alertmanager'
          accessModes:
            - ReadWriteMany
          size: 5Gi

        securityContext:
          runAsUser: 65534
          runAsNonRoot: true
          runAsGroup: 65534          

        podSecurityContext:          
          fsGroup: 0

        ingress:
          enabled: false
          className: nginx1
          annotations: 
            kubernetes.io/ingress.class: nginx            
          hosts:
            - host: alertmanager.dev.local
              paths:
                - path: /
                  pathType: ImplementationSpecific
          tls: []                    

      kube-state-metrics:
        enabled: true
        annotations: 
          prometheus.io/scrape: 'true'
          prometheus.io/port: '8080'
          prometheus.io/path: '/metrics'
          prometheus.io/scheme: 'http'
        image: 
          repository: '{{ monitoring_container_repo }}/bitnami/kube-state-metrics'
          tag: "2.8.2"          
        kubeRBACProxy:
          enabled: false
          image:            
            repository: '{{ monitoring_container_repo }}/bitnami/kube-rbac-proxy'
            tag: 0.14.1
      
      prometheus-node-exporter:
        enabled: true
        image:          
          repository: '{{ monitoring_container_repo }}/bitnami/node-exporter'
          tag: "1.5.0"
        kubeRBACProxy:
          enabled: false
          image:            
            repository: '{{ monitoring_container_repo }}/bitnami/kube-rbac-proxy'
            tag: 0.14.0

      prometheus-pushgateway:
        enabled: false
        image:
          repository: '{{ monitoring_container_repo }}/bitnami/pushgateway'
          tag: "1.5.1"