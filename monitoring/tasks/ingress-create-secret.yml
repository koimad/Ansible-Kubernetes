---
- name: Generate public key for  {{ item.path.split('.') | first | basename }} 
  ansible.builtin.command: "openssl pkcs12 -in {{ item.path }} -clcerts -nokeys -out {{ item.path.split('.') | first }}.crt --passin pass:{{ monitoring_certificate_pfx_password }}"

- name: Extract private key for {{ item.path.split('.') | first | basename }} 
  ansible.builtin.command: "openssl pkcs12 -in {{ item.path }} -nocerts -out {{ item.path.split('.') | first }}-encrypted.key --passin pass:{{ monitoring_certificate_pfx_password }} --passout pass:{{ monitoring_encrypted_key_password }}"

- name: Decript private key for {{ item.path.split('.') | first | basename }} 
  ansible.builtin.command: "openssl rsa -in {{ item.path.split('.') | first }}-encrypted.key -out {{ item.path.split('.') | first }}.key --passin pass:{{ monitoring_certificate_pfx_password }} --passout pass:{{ monitoring_encrypted_key_password }}"

- name: delete public key secret for {{ item.path.split('.') | first | basename }} 
  shell: kubectl -n {{ monitoring_namespace }} delete secret {{ item.path.split('.') | first | basename }}
  ignore_errors: true

- name: create public key secret for {{ item.path.split('.') | first | basename }} 
  shell: kubectl -n {{ monitoring_namespace }} create secret tls {{ item.path.split('.') | first | basename }} --cert {{ item.path.split('.') | first }}.crt --key  {{ item.path.split('.') | first }}.key
  
- name: Delete file {{ item.path.split('.') | first | basename }}.pfx 
  file:
    state: absent
    path: '{{ item.path }}'

- name: Delete file  {{ item.path.split('.') | first | basename }}-encrypted.key
  file:
    state: absent
    path: "{{ item.path.split('.') | first }}-encrypted.key"

- name: Delete file  {{ item.path.split('.') | first | basename }}.key
  file:
    state: absent
    path: "{{ item.path.split('.') | first }}.key"

- name: Delete file  {{ item.path.split('.') | first | basename }}.crt 
  file:
    state: absent
    path: "{{ item.path.split('.') | first }}.crt"

