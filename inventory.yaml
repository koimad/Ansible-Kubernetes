all:
  children:
    masters:
      hosts:
        redhat-8-c1-cp1.dev.local:        
      vars:
        ipvsMode: false;        

        workerEnpoints: 
          - worker1:
            name: redhat-8-c1-node1.dev.local
            ipAddress: 192.168.0.212
            interfaceName: eth0
          
          - worker2:
            name: redhat-8-c1-node2.dev.local
            ipAddress: 192.168.0.213              
            interfaceName: eth0
        
        controlEndpoints:
          - control1:
            name: redhat-8-c1-cp1.dev.local
            ipAddress: 192.168.0.211
            interfaceName: eth0

    workers:
      hosts:
        redhat-8-c1-node1.dev.local:
        redhat-8-c1-node2.dev.local:
              
  vars:    
    ansible_user: brian
    ansible_connection: ssh
    
    # configure_crio_ca_path:
    #   RedHat:
    #     7: /etc/pki/ca-trust/source/anchors
    #     8: /etc/pki/ca-trust/source/anchors  
    #     9: /etc/pki/ca-trust/source/anchors

    local_repository_host: dev-dc01.dev.local
    local_container_repo: '{{ local_repository_host }}:8444'
    metallb_container_repo: '{{ local_container_repo }}'
    monitoring_container_repo: '{{ local_container_repo }}'
    nfs_subdir_container_repo: '{{ local_container_repo }}'

    calico_docker_repository: '{{ local_container_repo }}'  
    #calico_docker_repository: "quay.io"  
    master_calico_docker_repository: '{{ calico_docker_repository }}'
    
    kubernetes_repository: '{{ local_container_repo }}'
    #kubernetes_repository: 'registry.k8s.io'  
    master_kubernetes_repository: '{{ kubernetes_repository }}'
         
    master_firewall_ports:        
      - 80/tcp
      - 443/tcp
      - 6443/tcp
      - 2379-2380/tcp
      - 10250/tcp
      - 10251/tcp
      - 10252/tcp
      - 179/tcp
      - 4789/udp
      - 5473/tcp
      - 51820/udp
      - 51821/udp    

    worker_firewall_ports:
      - 80/tcp
      - 443/tcp
      - 6443/tcp
      - 10250/tcp
      - 30000-32767/tcp
      - 179/tcp
      - 4789/udp
      - 5473/tcp
      - 51820/udp
      - 51821/udp
      - 2379/tcp         

    #crio version & OS
    crio_os: 'CentOS_8_Stream'
    configure_crio_crio_os: '{{  crio_os }}'
    configure_crio_crio_version: "1.27"

    # Kubernetes pod CIDR and service CIDR, should not cause clash with host networks CIDR
    pod_network_cidr: 192.160.0.0/16
    configure_crio_pod_network_cidr: '{{ pod_network_cidr }}'
    master_nodes_pod_network_cidr: '{{ pod_network_cidr }}'
    service_subnet_cidr: 10.96.0.0/12


    # Calico Pod Network CIDR should be a subnet of pod_network_cidr
    calico_pod_cidr: 192.160.0.0/18 
    master_nodes_calico_pod_cidr: '{{ calico_pod_cidr }}'

    hosts_cidr: 192.168.0.0/24

    masterNode: redhat-8-c1-cp1.dev.local

    metallb_ip_address_range: 192.168.0.230-192.168.0.240
    
    local_repository_base_url: https://{{ local_repository_host }}:8443

    # Kebernetes repo url for downloading kubernetes required yum packages
    install_k8s_kubernetes_yum_repo:  '{{ local_repository_base_url }}/repository/google/kubernetes-el7-x86_64'
    
    # Opensuse repo url for downloading kubernetes required yum packages
    configure_crio_open_suse_yum_repo: '{{ local_repository_base_url }}/repository/opensuse/{{ crio_os }}'

    # Python Repository 
    local_python_repository: '{{ local_repository_base_url }}/repository/Python'

    #Local Helm Repo
    local_helm_repository: '{{ local_repository_base_url }}/repository/helm-local'
    metallb_helm_repository: '{{ local_helm_repository }}'
    monitoring_helm_repository: '{{ local_helm_repository }}'
    nfs_subdir_helm_repository: '{{ local_helm_repository }}'

    monitoring_prometheus_host: 'prometheus.dev.local'
    monitoring_prometheus_url:  'https://{{ monitoring_prometheus_host }}'
    
    monitoring_grafana_host:  'grafana.dev.local'
    monitoring_grafana_url:  'https://{{ monitoring_grafana_host }}'

    monitoring_certificate_pfx_password: 'e8154314'
    monitoring_encrypted_key_password: 'micky-mouse'

    nfs_subdir_nfs_server: 'redhat-8-c1-cp1.dev.local'
    nfs_subdir_nfs_path: '/data'

    pre_setup_trusted_host: '{{ local_repository_host }}'
    pre_setup_python_repository: '{{ local_repository_base_url}}/repository/python-group'    
      