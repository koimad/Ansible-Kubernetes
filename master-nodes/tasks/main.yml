---
# Task to initialise the Kunbernetes Cluster and Configure the HostsEndpoints Firewalls using Calico
- name: Check if kubernetes already initialised
  stat:
    path: /etc/kubernetes/admin.conf
  register: kubernetes_init_status

- name: Initialize K8S cluster block
  block:
    - name: Create the kube-init config file
      template: 
        src: kube-init.j2 
        dest: ~/kube-init.yaml


    - name: Initialize K8S cluster
      shell: kubeadm init --config ~/kube-init.yaml # deploy using custom config and local repos
      #shell: kubeadm init --pod-network-cidr='{{ pod_network_cidr }}' # install with default container repos

    - name: Create .kube directory
      file:
        path: ~/.kube
        state: directory
        mode: 0755

    - name: Copy admin.conf to user kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: ~/.kube/config
        remote_src: yes

  when: not kubernetes_init_status.stat.exists

- name: Install Calico CNI
  kubernetes.core.k8s:
    state: present
    template: 'tigera-operator.j2'

- name: Configure Calico CNI
  kubernetes.core.k8s:
    state: present
    template: Calico-installation-configuration.j2

- name: Install Calicoctl
  copy:
    src: files/calicoctl/calicoctl-linux-amd64
    dest: /usr/local/bin/calicoctl
    owner: root
    group: root
    mode: u+x,g=+x,o=+x
    
- name: Set IPVS mode if required
  shell: 'kubectl get configmap kube-proxy -n kube-system -o yaml | sed -e "s/strictARP: false/strictARP: true/" | kubectl apply -f - -n kube-system'
  when: ipvsMode  


