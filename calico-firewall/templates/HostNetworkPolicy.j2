---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-cluster-internal-ingress
spec:
  order: 10
  preDNAT: true
  applyOnForward: true
  ingress:
    - action: Allow
      source:
        nets: [{{ calico_pod_cidr }},{{ configure_crio_pod_network_cidr }}]
  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-cluster-internal-egress
spec:
  order: 11
  egress:
    - action: Allow
      protocol: TCP
      destination:
        nets: [{{ calico_pod_cidr }},{{ configure_crio_pod_network_cidr }}]
        ports: [80,443,2049,6443,9443,2379:2380,10250,10251,10252,179,5473,30000:32767]
  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-web-https-ingress
spec:
  order: 12
  preDNAT: true
  applyOnForward: true
  ingress:
    - action: Allow
      protocol: TCP
      source:
        nets: [{{ hosts_cidr }}]
      destination:
        ports: [443]        
  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-web-ports-and-dns
spec:
  order: 13
  egress:
    - action: Allow
      protocol: TCP
      destination:
        ports: [80,443]
    - action: Allow
      protocol: UDP
      destination:
        ports: [53]         
  selector: has(worker-endpoint) || has(control-endpoint) 

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-docker-repo
spec:
  order: 14
  egress:
    - action: Allow
      protocol: TCP
      destination:
        ports: [8443,8444,8445,8446]
  selector: has(worker-endpoint) || has(control-endpoint) 

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-ssh
spec:
  order: 15
  egress:
    - action: Allow
      protocol: TCP
      destination:
        ports: [22]
  ingress:
    - action: Allow
      protocol: TCP
      destination:
        ports: [22]
  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-exec-it
spec:
  order: 16
  preDNAT: true
  applyOnForward: true
  ingress:
    - action: Allow
      protocol: TCP
      destination:
        selector: 'has(worker-endpoint) || has(control-endpoint)'
        ports: [10250]
      source:
        selector: 'has(control-endpoint)'

  selector: has(worker-endpoint) || has(control-endpoint)


---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-nfs-ingress
spec:
  order: 17
  preDNAT: true
  applyOnForward: true
  ingress:
    - action: Allow
      protocol: TCP
      destination:
        selector: 'has(control-endpoint)' 
        ports: [2049]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)'
    - action: Allow
      protocol: UDP
      destination:
        selector: 'has(control-endpoint)' 
        ports: [2049]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)'

  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-nfs-egress
spec:
  order: 18  
  egress:
    - action: Allow
      protocol: TCP
      destination:
        selector: 'has(control-endpoint)' 
        ports: [2049]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)'
    - action:  Allow
      protocol: UDP
      destination:
        selector: 'has(control-endpoint)' 
        ports: [2049]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)'        
  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-7946-ingress
spec:
  order: 19
  preDNAT: true
  applyOnForward: true
  ingress:
    - action: Allow
      protocol: TCP
      destination: 
        selector: 'has(worker-endpoint) || has(control-endpoint)'
        ports: [7946]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)' 
    - action: Allow
      protocol: UDP
      destination: 
        selector: 'has(worker-endpoint) || has(control-endpoint)'
        ports: [7946]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)' 

  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-7946-egress
spec:
  order: 20  
  egress:
    - action: Allow
      protocol: TCP
      destination: 
        selector: 'has(worker-endpoint) || has(control-endpoint)'
        ports: [7946]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)' 
    - action: Allow
      protocol: UDP
      destination: 
        selector: 'has(worker-endpoint) || has(control-endpoint)'
        ports: [7946]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)'         
  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-prometheus-ingress
spec:
  order: 21
  preDNAT: true
  applyOnForward: true
  ingress:
    - action: Allow
      protocol: TCP
      destination: 
        selector: 'has(worker-endpoint) || has(control-endpoint)'
        ports: [9100]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)' 
    - action: Allow
      protocol: UDP
      destination: 
        selector: 'has(worker-endpoint) || has(control-endpoint)'
        ports: [9100]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)' 

  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: allow-prometheus-egress
spec:
  order: 22  
  egress:
    - action: Allow
      protocol: TCP
      destination: 
        selector: 'has(worker-endpoint) || has(control-endpoint)'
        ports: [9100]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)' 
    - action: Allow
      protocol: UDP
      destination: 
        selector: 'has(worker-endpoint) || has(control-endpoint)'
        ports: [9100]
      source:
        selector: 'has(worker-endpoint) || has(control-endpoint)'         
  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: drop-all-other-other-ingress
spec:
  order: 1000
  preDNAT: true
  applyOnForward: true
  ingress:  
    - action: Log  
    - action: Deny    
  selector: has(worker-endpoint) || has(control-endpoint)

---
apiVersion: projectcalico.org/v3
kind: GlobalNetworkPolicy
metadata:
  name: drop-all-other-other-egress
spec:
  order: 1001    
  egress:  
    - action: Log  
    - action: Deny    
  selector: has(worker-endpoint) || has(control-endpoint)

