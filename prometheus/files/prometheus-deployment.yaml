apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app: prometheus-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - "--storage.tsdb.retention.time=6h"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus
            - name: prometheus-storage-volume
              mountPath: /prometheus
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
  
        - name: prometheus-storage-volume
          persistentVolumeClaim:
            claimName: prometheus-nfs-pvc            
          #emptyDir: {}
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-nfs-ps
  namespace: monitoring
  labels:
    type: nfs
    app: prometheus-server

spec:
  volumeMode: Filesystem
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOne
  storageClassName: managed-nfs  
  nfs:
    server: dev-dc01.dev.local
    path: "/data/prom"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-nfs-pvc
  namespace: monitoring
  labels:
    app: prometheus-server
spec:
  storageClassName: managed-nfs
  accessModes:
    - ReadWriteOne
  resources:
    requests:
      storage: 500Gi